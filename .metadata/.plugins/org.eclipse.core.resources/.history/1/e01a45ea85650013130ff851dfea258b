package de.th_wildau.quadroid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import de.th_wildau.quadroid.decoder.RxDataDecoder;
import de.th_wildau.quadroid.encoder.TxDataEncoder;
import de.th_wildau.quadroid.models.Attitude;
import de.th_wildau.quadroid.models.Course;
import de.th_wildau.quadroid.models.GNSS;
import de.th_wildau.quadroid.models.Landmark;
import de.th_wildau.quadroid.models.MetaData;
import de.th_wildau.quadroid.models.QuadroidAirplane;
import de.th_wildau.quadroid.models.Waypoint;

/**
 * 
 * Main Method for quadroid project
 * 
 * @author Thomas Rohde, trohde@th-wildau.de
 * @version 1.0 28.11.2013 (JDK 7) 
 * 
 * */

public class QuadroidMain
{
	
	
	/**Logger for Logging with {@link org.slf4j.Logger}*/
	public static Logger logger = null;
	


	public static void main(String[] args)
	{
		//logger = LoggerFactory.getLogger(QuadroidMain.class.getName());
		logger = Logger.getLogger();
		
		TxDataEncoder tx = new TxDataEncoder();
		RxDataDecoder decoder = new RxDataDecoder(null);
		QuadroidMain.logger.info("StartQuadroid");
		
		Attitude a = new Attitude();
		Course c = new Course();
		GNSS g = new GNSS();
		Landmark l = new Landmark();
		MetaData m = new MetaData();
		QuadroidAirplane q = new QuadroidAirplane();
		Waypoint w = new Waypoint();
		
		
		q.setBatteryState((byte) 78);
		q.setTime(154876582);
		
		g.setHeight(300.12547f);
		g.setLatitude(52.23564f);
		g.setLongitude(13.21546f);
		
		q.setGeoData(g);
		
		String data = new String(tx.quadroidairplaneToBytes(q));
		
		System.out.println( data );
		
		
		QuadroidAirplane newairplane = decoder.stringToAirplane(data);
		
		System.out.println(newairplane + "  " + newairplane.getBatteryState() + "  " 
		+ newairplane.getTime() + "  " + newairplane.GeoData().getHeight()+ "  " 
				+ newairplane.GeoData().getLatitude() + "  " + newairplane.GeoData().getLongitude());
		
		
	}

	
}
