package de.th_wildau.quadroid;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.apache.commons.codec.binary.Base64;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


import de.th_wildau.quadroid.decoder.RxDataDecoder;
import de.th_wildau.quadroid.encoder.TxDataEncoder;
import de.th_wildau.quadroid.enums.Marker;
import de.th_wildau.quadroid.models.Attitude;
import de.th_wildau.quadroid.models.Course;
import de.th_wildau.quadroid.models.GNSS;
import de.th_wildau.quadroid.models.Landmark;
import de.th_wildau.quadroid.models.QuadroidAirplane;
import de.th_wildau.quadroid.models.Waypoint;

/**
 * 
 * Main Method for quadroid project
 * 
 * @author Thomas Rohde, trohde@th-wildau.de
 * @version 1.0 28.11.2013 (JDK 7) 
 * 
 * */

public class QuadroidMain
{
	
	
	/**Logger for Logging with {@link org.slf4j.Logger}*/
	public static Logger logger = null;
	


	public static void main(String[] args)
	{
		logger = LoggerFactory.getLogger(QuadroidMain.class.getName());
		
		TxDataEncoder tx = new TxDataEncoder();
		RxDataDecoder decoder = new RxDataDecoder(null);
		QuadroidMain.logger.info("StartQuadroid");
		
		Attitude a = new Attitude();
		Course c = new Course();
		GNSS g = new GNSS();
		Landmark l = new Landmark();
		//MetaData m = new MetaData();
		QuadroidAirplane q = new QuadroidAirplane();
		Waypoint w = new Waypoint();
		GNSS g2 = new GNSS();
		
		try {
			BufferedImage img = ImageIO.read(new File("test.jpg"));
			
			byte[] imgbytes = tx.imageToByteArray(img, Marker.IMAGETYPE.getMarker());
			
			byte[] base64bytes = Base64.encodeBase64(imgbytes);
			System.out.println( imgbytes.length + " to " + base64bytes.length );
			
			String data = new String(base64bytes);
			
			byte[] back = Base64.decodeBase64(data.getBytes());
			
			System.out.println( base64bytes.length + " to " + back.length);
			
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	
}
